// Code generated by interhyp-improved OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apimodel

import (
    "time"
)

type _dummyTime struct {
    Timestamp *time.Time
}

type ChartReference struct {
    RepositoryURL string `yaml:"repositoryURL" json:"repositoryURL"`
    Name string `yaml:"name" json:"name"`
    Version *string `yaml:"version,omitempty" json:"version,omitempty"`
}

type Error struct {
    Details *string `yaml:"details,omitempty" json:"details,omitempty"`
    Message *string `yaml:"message,omitempty" json:"message,omitempty"`
    Timestamp *time.Time `yaml:"timestamp,omitempty" json:"timestamp,omitempty"`
}

type GitSource struct {
    Url string `yaml:"url" json:"url"`
    Reference string `yaml:"reference" json:"reference"`
    SubPath *string `yaml:"subPath,omitempty" json:"subPath,omitempty"`
}

type HealthComponent struct {
    Description *string `yaml:"description,omitempty" json:"description,omitempty"`
    Status *string `yaml:"status,omitempty" json:"status,omitempty"`
}

type HelmChartDependencyPatch struct {
    Target *HelmChartDependencyPatchTarget `yaml:"target,omitempty" json:"target,omitempty"`
    Values *HelmChartDependencyPatchValue `yaml:"values,omitempty" json:"values,omitempty"`
}

type HelmChartDependencyPatchTarget struct {
    RepositoryURL *string `yaml:"repositoryURL,omitempty" json:"repositoryURL,omitempty"`
    Name *string `yaml:"name,omitempty" json:"name,omitempty"`
    Version *string `yaml:"version,omitempty" json:"version,omitempty"`
    Alias *string `yaml:"alias,omitempty" json:"alias,omitempty"`
}

type HelmChartDependencyPatchValue struct {
    RepositoryURL *string `yaml:"repositoryURL,omitempty" json:"repositoryURL,omitempty"`
    Version *string `yaml:"version,omitempty" json:"version,omitempty"`
}

type HelmManifest struct {
    Content map[string]interface{} `yaml:"content" json:"content"`
    Source string `yaml:"source" json:"source"`
}

type HelmRenderMetadata struct {
    ReleaseName string `yaml:"releaseName" json:"releaseName"`
    Namespace string `yaml:"namespace" json:"namespace"`
    ApiVersions []string `yaml:"apiVersions" json:"apiVersions"`
    KubeVersion string `yaml:"kubeVersion" json:"kubeVersion"`
    HelmVersion string `yaml:"helmVersion" json:"helmVersion"`
    MergedValues map[string]interface{} `yaml:"mergedValues" json:"mergedValues"`
}

type HelmRenderParameters struct {
    ReleaseName *string `yaml:"releaseName,omitempty" json:"releaseName,omitempty"`
    Namespace *string `yaml:"namespace,omitempty" json:"namespace,omitempty"`
    KubeVersion *string `yaml:"kubeVersion,omitempty" json:"kubeVersion,omitempty"`
    ApiVersions []string `yaml:"apiVersions,omitempty" json:"apiVersions,omitempty"`
    ValueFiles []string `yaml:"valueFiles,omitempty" json:"valueFiles,omitempty"`
    Values *map[string]string `yaml:"values,omitempty" json:"values,omitempty"`
    ValuesFlat []string `yaml:"valuesFlat,omitempty" json:"valuesFlat,omitempty"`
    StringValues *map[string]string `yaml:"stringValues,omitempty" json:"stringValues,omitempty"`
    StringValuesFlat []string `yaml:"stringValuesFlat,omitempty" json:"stringValuesFlat,omitempty"`
    ComplexValues map[string]interface{} `yaml:"complexValues,omitempty" json:"complexValues,omitempty"`
    IncludeCRDs *bool `yaml:"includeCRDs,omitempty" json:"includeCRDs,omitempty"`
    IgnoreMissingValueFiles *bool `yaml:"ignoreMissingValueFiles,omitempty" json:"ignoreMissingValueFiles,omitempty"`
    DependencyPatches []HelmChartDependencyPatch `yaml:"dependencyPatches,omitempty" json:"dependencyPatches,omitempty"`
}

type KustomizeManifestInjection struct {
    FileName string `yaml:"fileName" json:"fileName"`
    Manifests []Manifest `yaml:"manifests" json:"manifests"`
}

type KustomizeRenderParameters struct {
    ManifestInjections []KustomizeManifestInjection `yaml:"manifestInjections,omitempty" json:"manifestInjections,omitempty"`
}

type Manifest struct {
    Content map[string]interface{} `yaml:"content" json:"content"`
}

type RenderManifestsViaHelmActionResponse struct {
    Manifests []HelmManifest `yaml:"manifests,omitempty" json:"manifests,omitempty"`
    Metadata *HelmRenderMetadata `yaml:"metadata,omitempty" json:"metadata,omitempty"`
}

type RenderManifestsViaHelmFromChartRepositoryAction struct {
    ChartReference ChartReference `yaml:"chartReference" json:"chartReference"`
    Parameters *HelmRenderParameters `yaml:"parameters,omitempty" json:"parameters,omitempty"`
}

type RenderManifestsViaHelmFromGitRepositoryAction struct {
    GitSource GitSource `yaml:"gitSource" json:"gitSource"`
    Parameters *HelmRenderParameters `yaml:"parameters,omitempty" json:"parameters,omitempty"`
}

type RenderManifestsViaKustomizeActionResponse struct {
    Manifests []Manifest `yaml:"manifests,omitempty" json:"manifests,omitempty"`
}

type RenderManifestsViaKustomizeFromGitRepositoryAction struct {
    GitSource GitSource `yaml:"gitSource" json:"gitSource"`
    Parameters *KustomizeRenderParameters `yaml:"parameters,omitempty" json:"parameters,omitempty"`
}

