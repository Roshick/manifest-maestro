{
  "openapi": "3.0.1",
  "info": {
    "title": "Manifest Maestro",
    "description": "Renders Kubernetes manifests with the help of various tools such as Helm and Kustomize.",
    "contact": {
      "name": "Elias R.",
      "url": "https://github.com/Roshick",
      "email": "e.rieb@posteo.de"
    },
    "license": {
      "name": "Copyright (c) 2023 Elias R.",
      "url": "https://github.com/Roshick"
    },
    "version": "v1"
  },
  "tags": [
    {
      "name": "Helm"
    },
    {
      "name": "Kustomize"
    },
    {
      "name": "Git Repository"
    },
    {
      "name": "Chart Repository"
    },
    {
      "name": "Management"
    }
  ],
  "paths": {
    "/rest/api/v1/sources/git-repo/{reposituryURL}/charts/{repositoryPath}/actions/render": {
      "post": {
        "tags": [
          "Git Repository",
          "Helm"
        ],
        "summary": "Render manifests from Git repository via Helm",
        "description": "Renders Kubernetes manifests based on a Helm Chart provided in a Git repository.\n\nService needs read permission on given Git repository.",
        "operationId": "postRenderHelmFromGitRepositoryAction",
        "parameters": [
          {
            "in": "path",
            "name": "reposituryURL",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "repositoryPath",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include-metadata",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "at",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenderManifestsViaHelmFromGitRepositoryAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RenderManifestsViaHelmActionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Repository is in an unprocessable state",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "502": {
            "description": "Upstream failed to respond",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rest/api/v1/sources/git-repo/{reposituryURL}/kustomizations/{repositoryPath}/actions/render": {
      "post": {
        "tags": [
          "Git Repository",
          "Kustomize"
        ],
        "summary": "Render manifests from Git repository via Kustomize",
        "description": "Renders Kubernetes manifests based on Kustomize configuration provided in a Git repository.\n\nService needs read permission on given Git repository.",
        "operationId": "postRenderKustomizeFromGitRepositoryAction",
        "parameters": [
          {
            "in": "path",
            "name": "reposituryURL",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "repositoryPath",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include-metadata",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "at",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenderManifestsViaKustomizeFromGitRepositoryAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RenderManifestsViaKustomizeActionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "502": {
            "description": "Upstream failed to respond",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rest/api/v1/sources/chart-repo/{reposituryURL}/charts/{chartName}/actions/render": {
      "post": {
        "tags": [
          "Chart Repository",
          "Helm"
        ],
        "summary": "Render manifests from Chart repository via Helm",
        "description": "Renders Kubernetes manifests based on a Helm Chart provided in a Chart repository.",
        "operationId": "postRenderHelmFromChartRepositoryAction",
        "parameters": [
          {
            "in": "path",
            "name": "reposituryURL",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "chartName",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "include-metadata",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenderManifestsViaHelmFromChartRepositoryAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RenderManifestsViaHelmActionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "502": {
            "description": "Upstream failed to respond",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/health/ready": {
      "get": {
        "tags": [
          "Management"
        ],
        "operationId": "getReadyHealth",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Health"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/health/live": {
      "get": {
        "tags": [
          "Management"
        ],
        "operationId": "getLiveHealth",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Health"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RenderManifestsViaHelmFromGitRepositoryAction": {
        "type": "object",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/HelmRenderParameters"
          }
        }
      },
      "RenderManifestsViaHelmFromChartRepositoryAction": {
        "type": "object",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/HelmRenderParameters"
          }
        }
      },
      "RenderManifestsViaKustomizeFromGitRepositoryAction": {
        "type": "object",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/KustomizeRenderParameters"
          }
        }
      },
      "RenderManifestsViaHelmActionResponse": {
        "type": "object",
        "properties": {
          "manifests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelmManifest"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/HelmRenderMetadata"
          }
        }
      },
      "RenderManifestsViaKustomizeActionResponse": {
        "type": "object",
        "properties": {
          "manifests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Manifest"
            }
          }
        }
      },
      "Manifest": {
        "type": "object",
        "required": [
          "content"
        ],
        "properties": {
          "content": {
            "type": "object"
          }
        }
      },
      "HelmManifest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Manifest"
          },
          {
            "type": "object",
            "required": [
              "source"
            ],
            "properties": {
              "source": {
                "type": "string"
              }
            }
          }
        ]
      },
      "HelmRenderMetadata": {
        "type": "object",
        "required": [
          "releaseName",
          "namespace",
          "apiVersions",
          "kubeVersion",
          "helmVersion",
          "mergedValues"
        ],
        "properties": {
          "releaseName": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "apiVersions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "kubeVersion": {
            "type": "string"
          },
          "helmVersion": {
            "type": "string"
          },
          "mergedValues": {
            "type": "object"
          }
        }
      },
      "HelmRenderParameters": {
        "type": "object",
        "properties": {
          "releaseName": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "kubeVersion": {
            "type": "string"
          },
          "apiVersions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "valueFiles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "remoteGitValueFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelmChartRemoteGitValueFile"
            }
          },
          "values": {
            "additionalProperties": {
              "type": "string"
            }
          },
          "valuesFlat": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "stringValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "stringValuesFlat": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "complexValues": {
            "type": "object"
          },
          "includeCRDs": {
            "type": "boolean"
          },
          "ignoreMissingValueFiles": {
            "type": "boolean"
          },
          "dependencyPatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelmChartDependencyPatch"
            }
          }
        }
      },
      "HelmChartRemoteGitValueFile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GitSource"
          }
        ]
      },
      "HelmChartDependencyPatch": {
        "type": "object",
        "properties": {
          "target": {
            "$ref": "#/components/schemas/HelmChartDependencyPatchTarget"
          },
          "values": {
            "$ref": "#/components/schemas/HelmChartDependencyPatchValue"
          }
        }
      },
      "HelmChartDependencyPatchTarget": {
        "type": "object",
        "properties": {
          "repositoryURL": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "HelmChartDependencyPatchValue": {
        "type": "object",
        "properties": {
          "repositoryURL": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "KustomizeRenderParameters": {
        "type": "object",
        "properties": {
          "manifestInjections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KustomizeManifestInjection"
            }
          }
        }
      },
      "KustomizeManifestInjection": {
        "type": "object",
        "required": [
          "fileName",
          "manifests"
        ],
        "properties": {
          "fileName": {
            "type": "string"
          },
          "manifests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Manifest"
            }
          }
        }
      },
      "ChartReference": {
        "type": "object",
        "required": [
          "repositoryURL",
          "name"
        ],
        "properties": {
          "repositoryURL": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "GitSource": {
        "type": "object",
        "required": [
          "url",
          "reference",
          "path"
        ],
        "properties": {
          "url": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          }
        }
      },
      "Health": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      }
    }
  }
}